-- tables
-- Table: Administrator
CREATE TABLE Administrator (
    fName char  NOT NULL,
    lName char  NOT NULL,
    adminEmail char  NOT NULL,
    reportContentProhibited char  NOT NULL,
    CONSTRAINT Administrator_pk PRIMARY KEY (adminEmail)
);

-- Table: createAccount
CREATE TABLE createAccount (
    studentAccount char  NOT NULL,
    Input char  NOT NULL,
    Login char  NOT NULL,
    Flag bool  NOT NULL,
    CONSTRAINT createAccount_pk PRIMARY KEY (studentAccount)
) COMMENT 'Student account is created, will flag if invalid string is input. ';

-- Table: editFeedback
CREATE TABLE editFeedback (
    `Delete` char  NOT NULL,
    Flagggg bool  NOT NULL,
    Reporting char  NOT NULL,
    Disable char  NOT NULL,
    CONSTRAINT editFeedback_pk PRIMARY KEY (`Delete`)
);

-- Table: professorSearch
CREATE TABLE professorSearch (
    searchCourse text  NOT NULL,
    courseNumber int  NOT NULL,
    classroomNum int  NOT NULL,
    meetTime time  NOT NULL,
    teacherName char  NOT NULL,
    CONSTRAINT professorSearch_pk PRIMARY KEY (teacherName)
);

-- Table: reportCont
CREATE TABLE reportCont (
    Prohibited char  NOT NULL,
    Flag bool  NOT NULL,
    unfriendlyComm char  NOT NULL,
    violateCode char  NOT NULL,
    CONSTRAINT reportCont_pk PRIMARY KEY (violateCode)
);

-- Table: subComments
CREATE TABLE subComments (
    Analysis char  NOT NULL,
    Rate char  NOT NULL,
    Flag bool  NOT NULL,
    dateTimestamp datetime  NOT NULL,
    `Delete` char  NOT NULL,
    Anon char  NOT NULL,
    CONSTRAINT subComments_pk PRIMARY KEY (Analysis)
);

-- End of file.


  






